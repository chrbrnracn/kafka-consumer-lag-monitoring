plugins {
    id 'maven'
    id 'signing'
}

ext {
    bintrayRepo = "kafka"
    bintrayName = "consumer-lag-monitoring"

    publishingGroupId = "com.omarsmak.kafka"
    publishingArtifactId = "consumer-lag-monitoring"

    libraryDescription = "Client tool that exports the consumer lag of Kafka consumer groups to Prometheus or your terminal"
    sitUrl = "https://github.com/omarsmak/kafka-consumer-lag-monitoring"
    gitUrl = "https://github.com/omarsmak/kafka-consumer-lag-monitoring.git"
    developerId = "omarsmak"
    developerName = "Omar Al-Safi"
    developerEmail = "omarsmak@gmail.com"
    licenceName = "The MIT License"
    licenseUrl = "https://opensource.org/licenses/MIT"
    libraryLicences = ['MIT']
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allSource
}

javadoc.failOnError = false

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourceJar
    archives javadocJar
}

signing {
    sign configurations.archives
}

tasks.withType(Sign) {
    onlyIf { gradle.taskGraph.hasTask("uploadArchives") }
}


dependencies {
    compile "org.apache.kafka:kafka-clients:$kafkaVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "io.mockk:mockk:${mockkVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
}

// Create the publication with the pom configuration:
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name libraryName
                groupId publishingGroupId
                artifactId publishingArtifactId
                version libraryVersion
                packaging 'jar'
                description libraryDescription
                url sitUrl

                scm {
                    url gitUrl
                }

                licenses {
                    license {
                        name licenceName
                        url licenseUrl
                    }
                }

                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
            }
        }
    }
}
